version: "3.8"

services:
  
  pipeline:
    build: .
    container_name: anomaly_pipeline
    ports:
      - "8000:8000"
    depends_on:
      - kafka
    networks:
      - anomaly_net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - pipeline
    networks:
      - anomaly_net

  grafana:
    image: grafana/grafana:10.4.3
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - anomaly_net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - anomaly_net

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - anomaly_net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka_ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - anomaly_net

  # ðŸ†• GCS â†’ Kafka Producer Service
  producer_gcs:
    build:
      context: .
      dockerfile: producer/Dockerfile.producer
    container_name: gcs_producer
    depends_on:
      - kafka
    environment:
      GCS_BUCKET: your-bucket-name
      KAFKA_BROKER: kafka:9092
      TOPIC: raw_events
      GOOGLE_APPLICATION_CREDENTIALS: /app/keys/service_account.json
      POLL_INTERVAL: 30
    volumes:
      - ./keys:/app/keys        # your GCP key folder
      - ./producer_gcs.py:/app/producer_gcs.py
    command: ["python", "producer_gcs.py"]
    networks:
      - anomaly_net

networks:
  anomaly_net:
    driver: bridge
